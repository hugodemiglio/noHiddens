<?php

/* *
* 
* Classe hidden
* 
* Desenvolvida por Hugo Demiglio (@hugodemiglio)
* hugo@formaweb.com.br
* 
* Recomendado para o Mac OS (comando "php run")
*
* */

$diretorio = "/Volumes/CARRO"; // Diretório a ser vasculhado

class Hidden{
  
  var $fila = array();
  var $atual;
  var $root;
  var $inicio = '.'; //Inicio do arquivo a ser apagado (p/ apagar tudo, deixe em branco)
  
  function __construct($diretorio){
    $this->write("Iniciando busca no diretório.;;");
    $this->fila[] = $diretorio;
    $this->root = $diretorio;
    while(isset($this->fila[0])){
      $this->atual = $this->fila[0];
      $this->write("Diretório atual: '".$this->atual."'...;");
      $this->remover($this->retornarDir($this->atual));
      $this->write("Terminando ações no diretório...<ok>  [ OK ]</c>;;");
      $this->reAlocar();
    }
    $this->removeMacPath();
    $this->write(";Concluido com sucesso.;;");
  }
  
  function retornarDir($diretorio){
    if(is_dir($diretorio)){
      $dh = opendir($diretorio);
      $files = array();
      $dirs = array();
      while (($file = readdir($dh)) !== false){
        if($file == '.' OR $file == '..') continue;
        if(is_dir($diretorio.'/'.$file)){
          array_push($dirs, $diretorio.'/'.$file);
        } else {
          array_push($files, $file);
        }
      }
      closedir($dh);
    }
    $this->insert($dirs);
    $this->write("Resumo: ".count($dirs)." diretório(s) e ".count($files)." arquivo(s).;");
    return $files;
  }
  
  function removeMacPath(){
    $paths = array('.Spotlight-V100', '.Trashes', '.fseventsd');
    foreach($paths as $path){
      if(is_dir($this->root."/".$path."/")){
        system("rm -R ".$this->root."/".$path."/");
        $this->write("<fail>Removendo pasta: '".$path."'<ok>  [ OK ]</c>;");
      }
    }
  }

  function remover($files){
    if(is_array($files)) foreach($files as $file){
      if(substr($file, 0, strlen($this->inicio)) == $this->inicio){
        $this->write("<fail>Removendo arquivo: '".$file."'<ok>  [ OK ]</c>;");
        system("rm ".$this->nomeBarra($this->atual)."/".$this->nomeBarra($file));
      }
    }
  }

  function nomeBarra($nome){
    $replaces = array(
      ' ' => '\ ',
      "'" => "\'",
      '"' => '\"',
      '(' => '\(',
      ')' => '\)',
    );
    foreach($replaces as $key => $replace){
      $nome = str_replace($key, $replace, $nome);
    }
    return $nome;
    //return str_replace(' ', '\ ', str_replace("'", "\'", str_replace('"', '\"', $nome)));
  }
  
  function reAlocar(){
    $fila = $this->fila;
    $return = array();
    if(is_array($fila)) foreach($fila as $key => $valor){
      if($key == 0) continue;
      $return[] = $valor;
    }
    $this->fila = $return;
  }
  
  function insert($array){
    $inicio = count($this->fila);
    $return = $this->fila;
    if(is_array($array)) foreach($array as $dados){
      $this->write("<info>Adicionando '".$dados."' na fila.</c>;");
      $return[$inicio] = $dados;
      $inicio++;
    }
    $this->fila = $return;
  }
  
  function write($text){
    $text = str_replace(';', "\n", $text);
    $text = str_replace('</c>', "\033[0m", $text); //Normal Color
    $text = str_replace('<ok>', "\033[92m", $text); //OK Color
    $text = str_replace('<info>', "\033[94m", $text); //INFO Color
    $text = str_replace('<fail>', "\033[91m", $text); //FAIL Color
    echo $text;
  }

}

if(isset($_SERVER['argv'][1])) $diretorio = $_SERVER['argv'][1];

$hidden = new Hidden($diretorio);

?>